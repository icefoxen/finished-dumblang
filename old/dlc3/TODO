The change needed here is:
If a var or function call has an external name in it, it must be resolved.
--To do this, module headers must be imported
If a var or function doesn't exist, it must have the imported modules checked
to see if it exists there.

If a function is on the export list, it must make sure it exists.


Things to do (short term):
...I don't know what gets returned if an if statement has no else part, and
fails.

Module system
None type...
Globals/consts
Typedefs

(longer term)
Inline assembly!
Array and pointer types
For loops
elif's
Short-circuit and and or


I think that we ARE going to need a None type, something that means "No valid return type".  Even OCaml has one, unit.  So...  I'm not sure we need/want an actual value of that type, though.


Issues:
Logical not doesn't work.
Floating-point comparison doesn't work
Coercion from float to int has no rounding policy
